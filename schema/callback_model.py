# generated by datamodel-codegen:
#   filename:  callback.schema.json
#   timestamp: 2023-11-03T13:53:55+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel


class Amount(BaseModel):
    currency: str
    value: str


class Geolocation(BaseModel):
    latitude: float
    longitude: float
    altitude: float
    radius: float


class BalanceAfterMutation(BaseModel):
    currency: str
    value: str


class Url(BaseModel):
    type: str
    url: str


class ImageItem(BaseModel):
    attachment_public_uuid: str
    height: int
    width: int
    content_type: str
    urls: List[Url]


class Avatar(BaseModel):
    uuid: str
    image: List[ImageItem]
    anchor_uuid: Optional[str] = None
    style: str


class ImageItem1(BaseModel):
    attachment_public_uuid: str
    height: int
    width: int
    content_type: str
    urls: List[Url]


class Avatar1(BaseModel):
    uuid: str
    image: List[ImageItem1]
    anchor_uuid: str
    style: str


class LabelUser(BaseModel):
    uuid: Optional[str] = None
    display_name: str
    country: str
    avatar: Optional[Avatar1] = None
    public_nick_name: str
    type: Optional[str] = None


class AliasOrCounterpartyAlias(BaseModel):
    iban: str
    is_light: bool
    display_name: str
    avatar: Avatar
    label_user: LabelUser
    country: str


class Payment(BaseModel):
    id: int
    created: datetime
    updated: datetime
    monetary_account_id: int
    amount: Amount
    description: str
    type: str
    merchant_reference: Optional[str] = None
    alias: AliasOrCounterpartyAlias
    counterparty_alias: AliasOrCounterpartyAlias
    attachment: List[str]
    geolocation: Geolocation
    batch_id: Optional[str] = None
    scheduled_id: Optional[str] = None
    address_billing: Optional[str] = None
    address_shipping: Optional[str] = None
    sub_type: str
    request_reference_split_the_bill: List[str]
    balance_after_mutation: BalanceAfterMutation
    payment_auto_allocate_instance: Optional[str] = None


class Object(BaseModel):
    Payment: Payment


class NotificationUrl(BaseModel):
    target_url: str
    category: str
    event_type: str
    object: Object


class Model(BaseModel):
    NotificationUrl: NotificationUrl
