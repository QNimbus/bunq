services:
  chisel:
    container_name: bunq-chisel
    image: besquared/chisel-bunq
    build:
      dockerfile: Dockerfile.chisel
    logging:
      driver: 'local'
      options:
        max-size: '10m'
        max-file: '5'
        compress: 'true'
    restart: unless-stopped
    init: true
    env_file:
      - .env    
    environment: []
    healthcheck:
      interval: 30s
      timeout: 2s
      start_period: 30s
      start_interval: 1s
      retries: 3
      test: "timeout 2 /bin/bash -c \"cat /dev/null > /dev/tcp/45.147.50.31/443 && cat /dev/null > /dev/tcp/45.147.50.31/2334\""

  redis:
    container_name: bunq-redis
    image: redis:alpine
    logging:
      driver: 'local'
      options:
        max-size: '10m'
        max-file: '5'
        compress: 'true'
    restart: unless-stopped
    env_file:
      - .env    
    environment: []
    volumes:
      - cache:/data
    command: redis-server --save 60 1 --loglevel warning --requirepass <SECRET>
    healthcheck:
      interval: 30s
      timeout: 1s
      start_period: 30s
      start_interval: 1s
      retries: 3
      test: "/usr/bin/nc -z -w1 127.0.0.1 6379 || exit 1"

  bunq:
    container_name: bunq
    image: besquared/bunq
    build:
      dockerfile: Dockerfile
    logging:
      driver: 'local'
      options:
        max-size: '10m'
        max-file: '5'
        compress: 'true'
    restart: unless-stopped
    init: true
    env_file:
      - .env
    environment: []
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - type: bind
        source: ./rules
        target: /app/rules
        read_only: false
      - type: bind
        source: ./conf
        target: /app/conf
        read_only: false
      - type: bind
        source: ./users.json
        target: /app/users.json
        read_only: true
    healthcheck:
      interval: 30s
      timeout: 1s
      retries: 3
      start_period: 15s
      start_interval: 1s
      test: "timeout 1 /bin/bash -c \"cat /dev/null > /dev/tcp/127.0.01/5000\""
    depends_on:
      chisel:
        condition: service_healthy
        restart: false
      redis:
        condition: service_healthy
        restart: false

volumes:
  cache:
    driver: local
